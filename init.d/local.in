#!@SBINDIR@/openrc-run
# Copyright (c) 2007-2008 Roy Marples <roy@marples.name>
# Released under the 2-clause BSD license.

description="Executes user programs in @SYSCONFDIR@/local.d"

depend()
{
	after *
	keyword -timeout
}

start()
{
	ebegin "Starting local"

	local file has_errors retval
	eindent
	for file in @SYSCONFDIR@/local.d/*.start; do
		if [ -x "${file}" ]; then
			has_executables=1
			vebegin "Executing \"${file}\""
			"${file}" 2>&1 >/dev/null
			retval=$?
			if [ ${retval} -ne 0 ]; then
				has_errors=1
				ewend ${retval} "Execution of \"${file}\" failed."
			else
				vewend 0
			fi
		fi
	done
	eoutdent

	if command -v local_start >/dev/null 2>&1; then
		ewarn "\"@SYSCONFDIR@/conf.d/local\" should be removed."
		ewarn "Please move the code from the local_start function"
		ewarn "to executable scripts with an .start extension"
		ewarn "in \"@SYSCONFDIR@/local.d\""
		local_start
	fi

	if [ -z "${has_errors}" ]; then
		eend 0
	fi

	# We have to end with a zero exit code, because a failed execution
	# of an executable @SYSCONFDIR@/local.d/*.start file shouldn't result in
	# marking the local service as failed. Otherwise we are unable to
	# execute any executable @SYSCONFDIR@/local.d/*.stop file, because a failed
	# marked service cannot be stopped (and the stop function would
	# actually call the executable @SYSCONFDIR@/local.d/*.stop file(s)).
	return 0
}

stop()
{
	ebegin "Stopping local"

	local file has_errors retval
	eindent
	for file in @SYSCONFDIR@/local.d/*.stop; do
		if [ -x "${file}" ]; then
			has_executables=1
			vebegin "Executing \"${file}\""
			"${file}" 2>&1 >/dev/null
			retval=$?
			if [ ${retval} -ne 0 ]; then
				has_errors=1
				ewend ${retval} "Execution of \"${file}\" failed."
			else
				vewend 0
			fi
		fi
	done
	eoutdent

	if command -v local_stop >/dev/null 2>&1; then
		ewarn "\"@SYSCONFDIR@/conf.d/local\" should be removed."
		ewarn "Please move the code from the local_stop function"
		ewarn "to executable scripts with an .stop extension"
		ewarn "in \"@SYSCONFDIR@/local.d\""
		local_stop
	fi

	if [ -z "${has_errors}" ]; then
		eend 0
	fi

	# An executable @SYSCONFDIR@/local.d/*.stop file which failed with a
	# non-zero exit status is not a reason to mark this service
	# as failed, therefore we have to end with a zero exit code.
	return 0
}
